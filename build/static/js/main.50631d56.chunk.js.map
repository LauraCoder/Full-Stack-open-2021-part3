{"version":3,"sources":["services/persons.js","components/ContactList.js","components/Filter.js","components/Form.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","exportedObjects","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","deleteContact","delete","Name","person","deleteName","name","number","onClick","Contacts","contacts","map","Filter","filterNames","handleFilter","value","onChange","Form","addName","newName","handleNameChange","newNumber","handleNumber","onSubmit","type","Notification","message","className","text","App","useState","persons","setPersons","setNewName","setNewNumber","setFilter","setMessage","useEffect","nameService","initialNames","filter","toLowerCase","includes","event","target","preventDefault","nameObject","find","p","updatedPerson","some","window","confirm","setTimeout","console","log","concat","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.50631d56.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n  }\r\n  \r\nconst create = newObject => {\r\n   const request = axios.post(baseUrl, newObject)\r\n   return request.then(response => response.data)\r\n }\r\n  \r\nconst update = (id, newObject) => {\r\n   const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n   return request.then(response => response.data)\r\n }\r\n\r\nconst deleteContact = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst exportedObjects = { getAll, create, update, deleteContact }\r\n\r\nexport default exportedObjects","import React from 'react'\r\n\r\n//renders a line for the contact list\r\nconst Name = ({ person, deleteName }) => {\r\n    return (\r\n      <li>{person.name} {person.number} <button onClick={() => deleteName(person.id, person.name)}>delete</button></li>\r\n    )\r\n  }\r\n  \r\n//renders the list of contacts\r\nconst Contacts = ({ contacts, deleteName }) => {\r\n    return (\r\n      <ul>\r\n        {contacts.map(person => <Name key={person.id} person={person} deleteName={deleteName}/>)}\r\n      </ul>\r\n    )\r\n  }\r\n\r\nexport default Contacts","import React from 'react'\r\n\r\n//renders the filtering input field\r\nconst Filter = ({ filterNames, handleFilter }) => {\r\n    return (\r\n      <div>\r\n        Filter contacts with: \r\n        <input value={filterNames} onChange={handleFilter}/>\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Filter","import React from 'react'\r\n\r\n//renders the form for adding new contact\r\nconst Form = ({ addName, newName, handleNameChange, newNumber, handleNumber }) => {\r\n    return (\r\n    <form onSubmit={addName}>\r\n      <div>\r\n        name: <input value={newName} onChange={handleNameChange} />\r\n      </div>\r\n      <div>\r\n        number: <input value={newNumber} onChange={handleNumber} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n    )\r\n  }\r\n\r\nexport default Form","import React from 'react'\r\n\r\n//renders notification message\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className={message.type}>\r\n        {message.text}\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport nameService from './services/persons'\nimport Contacts from './components/ContactList'\nimport Filter from './components/Filter'\nimport Form from './components/Form'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filterNames, setFilter ] = useState('')\n  const [ message, setMessage] = useState(null)\n\n  useEffect(() => {\n    nameService\n      .getAll()\n      .then(initialNames => {\n        setPersons(initialNames)\n      })\n  }, [])\n\n  const addName = (event) => {\n    event.preventDefault()\n    const nameObject = {\n      name: newName,\n      number: newNumber\n    }\n    const person = persons.find(p => p.name.toLowerCase() === nameObject.name.toLowerCase())\n    const updatedPerson = { ...person, number: nameObject.number }\n\n    //if a name already exists in the contacts, there will be an alert. If doesn't exists, adds to contacts.\n    if (persons.some(person => person.name.toLowerCase() === nameObject.name.toLowerCase())) {\n      if(window.confirm(`${newName} is already added to phonebook. Would you like to replace the old number with a new one?`)){\n        nameService\n          .update(person.id, updatedPerson)\n          .then(response => {\n            setPersons(persons.map(person => person.name !== updatedPerson.name ? person : response))\n            setMessage({\n              text: `Number of ${newName} was updated`,\n              type: \"success\"\n            })\n            setTimeout(() => {\n              setMessage(null)\n            }, 2000)\n            console.log(\"Contact updated\", response)\n          })\n      }\n    } else {\n      nameService\n        .create(nameObject)\n        .then(response => {\n          setPersons(persons.concat(response))\n          setMessage({\n            text: `${newName} was added to the phonebook`,\n            type: \"success\"\n          })\n          setTimeout(() => {\n            setMessage(null)\n          }, 2000)\n          console.log(\"Contact created\", response)\n        })\n    }\n    \n    setNewName('')\n    setNewNumber('')\n\n  }\n\n  const deleteName = (id, name) => {\n    if (window.confirm(`Delete ${name} ?`)) {\n      nameService\n        .deleteContact(id)\n        .then(response => {\n          setPersons(persons.filter(person => person.id !== id))\n          setMessage({\n            text: `Contact ${name} was deleted`,\n            type: \"success\"\n          })\n          setTimeout(() => {\n            setMessage(null)\n            }, 2000)\n          console.log(\"Contact deleted\", response)\n        })\n        .catch(error => {\n          setMessage({\n            text: `Note '${name}' was already removed from server`,\n            type: \"error\"\n          })\n          setTimeout(() => {\n            setMessage(null)\n          }, 2000)\n          console.error(error)\n          setPersons(persons.filter(person => person.id !== id))\n        })\n    }\n  }\n \n  const handleNameChange = (event) => setNewName(event.target.value)\n  const handleNumber = (event) => setNewNumber(event.target.value)\n  const handleFilter = (event) => setFilter(event.target.value)\n\n  //filters the list of contacts according to user input\n  const contacts = filterNames === \"\"\n    ? persons\n    : persons.filter(person => person.name.toLowerCase().includes(filterNames.toLowerCase()))\n  \n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <Filter filterNames={filterNames} handleFilter={handleFilter} />\n      <h2>Add a new contact</h2>\n      <Form addName={addName} newName={newName} handleNameChange={handleNameChange} newNumber={newNumber} handleNumber={handleNumber} />\n      <h2>Numbers</h2>\n      <Contacts contacts={contacts} deleteName={deleteName}/>\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}